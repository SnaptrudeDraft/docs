{
  "post": {
    "description": "Get folders from the team",
    "parameters": [
      {
        "name": "teamId",
        "in": "path",
        "description": "team id",
        "required": true,
        "schema": {
          "type": "integer",
          "format": "int64"
        }
      },
      {
        "name": "offset",
        "in": "query",
        "description": "Determines the number of folders to bypass before retrieving the initial folder. (Set to 0 if not relevant)",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "limit",
        "in": "query",
        "description": "Defines the maximum count of folders to be fetched.",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "folder",
        "in": "query",
        "description": "(optional) Represents the parent folder's unique ID. If not specified, the API call will retrieve folders within my workspace.",
        "schema": {
          "type": "string"
        }
      }
    ],
    "responses": {
      "200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "required": ["folders"],
              "type": "object",
              "properties": {
                "folders": {
                  "description": "folders from workspace",
                  "type": "array",
                  "items": {
                    "description": "Folder",
                    "type": "object",
                    "properties": {
                      "all_parents": {
                        "description": "",
                        "type": "string"
                      },
                      "name": {
                        "description": "name of the folder",
                        "type": "string"
                      },
                      "user_dashboard": {
                        "description": "user id",
                        "type": "integer",
                        "format": "int64"
                      },
                      "deleted": {
                        "description": "",
                        "type": "boolean"
                      },
                      "immediate_parent": {
                        "description": "parent folder id, folder is at root level so null",
                        "type": "string"
                      },
                      "created_by": {
                        "description": "user id who created the folder",
                        "type": "integer",
                        "format": "int64"
                      },
                      "last_updated_by": {
                        "description": "user id who last updated the folder",
                        "type": "integer",
                        "format": "int64"
                      },
                      "team_dashboard": {
                        "description": "",
                        "type": "string"
                      },
                      "id": {
                        "description": "folder id",
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  }
                },
                "message": {
                  "description": "Success/failure (invalid)",
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "Unexpected error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../../schemas/Error.json"
            }
          }
        }
      }
    }
  }
}
